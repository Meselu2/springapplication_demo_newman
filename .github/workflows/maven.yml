# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on: push
jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Checkout
      uses: actions/checkout@v1
  deploy:
    needs: build_test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
            project_id: ace-agility-396119
            service_account_key: ${{ secrets.SA_CREDS}}
            export_default_credentials: true
      - name: Configure docker for GCP
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: meselu27/springbot-application-image
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.USERNAME}}
          password: ${{ secrets.PASSWORD}}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@main
        with:
                image: meselu27/springbot-application-image:latest
                service: My First Project
                region: us-central1
                platform: managed
                allow-unauthenticated: true
                env_vars: |
                  FOO=bar
                  ZIP=zap
  API_test:
    needs: [build_test, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Set output
        run: echo 'done api_test'
