# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on: push
jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
            project_id: spring-app-55394
            service_account_key: ${{ secrets.SA_CREDS}}
            export_default_credentials: true
    - name: Configure docker for GCP
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
          image: meselu27/springbot-application-image
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.USERNAME}}
          password: ${{ secrets.PASSWORD}}

  deploy:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: spring-app-55394
          service_account_key: ${{ secrets.SA_CREDS}}
          export_default_credentials: true
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@main
        with:
          image: meselu27/springbot-application-image:latest
          service: application-deployment
          region: us-central1
          platform: managed
          allow-unauthenticated: true
          env_vars: |
            FOO=bar
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
          channel-id: 'C05P2N971QS'
          # For posting a simple plain text message
          slack-message: "Application deployment result: ${{ job.status }}"
        env:
          SLACK_BOT_TOKEN: ${{secrets.SLACK_BOT_TOKEN }}
  api-test:
    defaults:
      run:
        working-directory: ./api_tests
    runs-on: ubuntu-latest
    needs: [build_test, deploy]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v2
      with:
        node-version: "18"
    - name: "Install newman"
      run: "npm install -g newman"
    - name: "Install newman reporter"
      run: "npm install -g newman-reporter-htmlextra"
    - name: "Run tests"
      run: "newman run Even-odd-test.postman_collection.json -e even-odd-postman-enviroment.postman_environment.json 
      -r htmlextra --reporter-htmlextra-export htmlreport.html --reporter-htmlextra-darkTheme  > runreport1.html"
    - name: Publish report
      uses: MeilCli/slack-upload-file@v1
      with:
        slack_token: ${{ secrets.SLACK_BOT_TOKEN }}
        file_path: './api_tests/htmlreport.html'
        file_name: 'postmanReport.html'
        file_type: 'html'
        channels: 'api-test'